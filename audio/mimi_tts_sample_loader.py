# This file was automatically generated by `energon prepare`.
# TODO: Edit it to return the proper fields
import numpy as np
import torch


def sample_loader(raw: dict) -> dict:  # Note: Images are already decoded to tensors
    # TODO: Set the correct values for all (required) fields
    return dict(
        text=raw["wav.text"],  # expected type: typing.Optional[str], default: None
        codec_label=torch.from_numpy(np.frombuffer(raw['wav.codec_label.npy'], dtype=np.int64)).view(8, -1),
        speaker=raw["wav.speaker"]
    )


def part_filter(part: str) -> bool:
    # TODO: Filter for parts required by the sample_loader
    # E.g. if your dataset contains jpeg, txt and json, but you won't use json,
    # remove it from the list, such that it is not decoded. If you need all, keep as is
    return part in ('wav.codec_label.npy', 'wav.text', 'wav.speaker')
